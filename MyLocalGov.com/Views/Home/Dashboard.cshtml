@model MyLocalGov.com.ViewModels.DashboardViewModel
@{
    ViewData["Title"] = "Dashboard";
    ViewData["HideNavbar"] = false;
}

<div class="dashboard-container page-fade-in">
    <header class="dashboard-header slide-in-right grow-in">
        <div class="d-flex justify-content-between align-items-start flex-wrap">
            <div>
                <h1 class="dashboard-title fade-in">üìä Dashboard Overview</h1>
                <p class="dashboard-subtitle fade-in">
                    Welcome to your municipal services portal
                </p>
            </div>
            <div class="user-info fade-in">
                <div class="user-avatar">@Model.User.Avatar</div>
                <div>
                    <div style="font-weight: 600;">@Model.User.Name</div>
                    <div style="font-size: 14px;">ID: @Model.User.IdNumber</div>
                    <div style="font-size: 12px; color: var(--white-transparent-80);">@Model.User.Municipality - @Model.User.Ward</div>
                </div>
            </div>
        </div>
    </header>

    <!-- Dashboard Statistics -->
    <section class="dashboard-stats">
        <div class="stat-card slide-in-left grow-in stagger-1">
            <div class="stat-number fade-in">@Model.Stats.ActiveRequests</div>
            <div class="stat-label fade-in">Active Requests</div>
        </div>
        <div class="stat-card slide-in-left grow-in stagger-2">
            <div class="stat-number fade-in">@Model.Stats.CompletedIssues</div>
            <div class="stat-label fade-in">Completed Issues</div>
        </div>
        <div class="stat-card slide-in-left grow-in stagger-3">
            <div class="stat-number fade-in">@Model.Stats.UpcomingEvents</div>
            <div class="stat-label fade-in">Upcoming Events</div>
        </div>
        <div class="stat-card slide-in-left grow-in stagger-4">
            <div class="stat-number fade-in">@Model.Stats.UrgentNotices</div>
            <div class="stat-label fade-in">Urgent Notices</div>
        </div>
    </section>

    <!-- Quick Actions -->
    <section class="quick-actions">
        <h2 class="section-title slide-in-right fade-in">
            üöÄ Quick Actions
        </h2>
        <div class="actions-grid">
            <div class="action-card slide-in-up grow-in stagger-1 ripple-effect" onclick="handleActionClick('report-issue', this)">
                <span class="action-icon fade-in">üì¢</span>
                <h3 class="action-title fade-in">Report an Issue</h3>
                <p class="action-description fade-in">
                    Report municipal problems like potholes, water leaks, power outages, or waste collection issues to your local municipality.
                </p>
            </div>
            
            <div class="action-card slide-in-up grow-in stagger-2 ripple-effect" onclick="handleActionClick('request-service', this)">
                <span class="action-icon fade-in">üìù</span>
                <h3 class="action-title fade-in">Request Service</h3>
                <p class="action-description fade-in">
                    Submit requests for municipal services such as permits, certificates, waste collection schedules, or general maintenance.
                </p>
            </div>
            
            <div class="action-card slide-in-up grow-in stagger-3 ripple-effect" onclick="handleActionClick('view-events', this)">
                <span class="action-icon fade-in">üìÖ</span>
                <h3 class="action-title fade-in">Local Events</h3>
                <p class="action-description fade-in">
                    Browse upcoming community events, council meetings, and important municipal announcements in your area.
                </p>
            </div>
            
            <div class="action-card slide-in-up grow-in stagger-4 ripple-effect" onclick="handleActionClick('track-requests', this)">
                <span class="action-icon fade-in">üìä</span>
                <h3 class="action-title fade-in">Track My Requests</h3>
                <p class="action-description fade-in">
                    Monitor the progress of your submitted issues and service requests with real-time status updates and notifications.
                </p>
            </div>
        </div>
    </section>

    <!-- Recent Activity -->
    <section class="recent-activity slide-in-up grow-in">
        <h2 class="section-title fade-in">
            üïí Recent Activity
        </h2>
        <ul class="activity-list">
            @foreach (var activity in Model.RecentActivities)
            {
                <li class="activity-item fade-in">
                    <div class="activity-icon pulse">@activity.Icon</div>
                    <div class="activity-content">
                        <div class="activity-title fade-in">@activity.Title</div>
                        <div class="activity-description fade-in">@activity.Description</div>
                        <div class="activity-time fade-in">@activity.Timestamp.ToString("MMM dd, yyyy 'at' h:mm tt")</div>
                    </div>
                    <span class="status-badge @activity.StatusClass fade-in">@activity.StatusText</span>
                </li>
            }
        </ul>
    </section>

    <!-- Municipal Announcements -->
    <section class="announcements slide-in-up grow-in">
        <h2 class="section-title fade-in">
            üì¢ Municipal Announcements
        </h2>
        @foreach (var announcement in Model.Announcements)
        {
            <div class="announcement-item fade-in">
                <div class="announcement-title fade-in">@announcement.Icon @announcement.Title</div>
                <div class="announcement-content fade-in">
                    @announcement.Content
                </div>
                <div class="announcement-date fade-in">Posted: @announcement.PostedDate.ToString("MMMM dd, yyyy")</div>
            </div>
        }
    </section>
</div>

<!-- JavaScript -->
<script>
    // Page load animations
    document.addEventListener('DOMContentLoaded', function () {
        document.body.classList.add('page-loaded');
    });

    // Handle action card clicks with ripple effect
    function handleActionClick(action, element) {
        // Ripple effect handled by .ripple-effect in CSS
        // Handle different actions
        setTimeout(() => {
            switch (action) {
                case 'report-issue':
                    alert('üöß Report Issue feature coming soon!\n\nThis will allow you to:\n‚Ä¢ Report potholes, water leaks, power outages\n‚Ä¢ Upload photos and location data\n‚Ä¢ Track repair progress\n‚Ä¢ Receive status notifications');
                    break;
                case 'request-service':
                    alert('üìã Request Service feature coming soon!\n\nThis will allow you to:\n‚Ä¢ Request municipal permits\n‚Ä¢ Schedule waste collection\n‚Ä¢ Apply for certificates\n‚Ä¢ Book municipal facilities');
                    break;
                case 'view-events':
                    alert('üé™ Local Events feature coming soon!\n\nThis will show you:\n‚Ä¢ Upcoming community events\n‚Ä¢ Council meetings\n‚Ä¢ Public hearings\n‚Ä¢ Municipal announcements\n‚Ä¢ Event registration');
                    break;
                case 'track-requests':
                    alert('üìà Track Requests feature coming soon!\n\nThis will provide:\n‚Ä¢ Real-time status updates\n‚Ä¢ Request history\n‚Ä¢ Estimated completion times\n‚Ä¢ Communication with municipal staff\n‚Ä¢ Document downloads');
                    break;
                default:
                    console.log('Unknown action:', action);
            }
        }, 300);
    }

    // Auto-refresh data simulation
    function updateDashboardData() {
        // Simulate real-time updates (in a real app, this would fetch from an API)
        console.log('Dashboard data refreshed at:', new Date().toLocaleTimeString());
    }

    // Refresh every 30 seconds
    setInterval(updateDashboardData, 30000);

    // Service worker registration for offline functionality (future enhancement)
    if ('serviceWorker' in navigator) {
        window.addEventListener('load', function() {
            console.log('Dashboard ready for service worker registration');
        });
    }
</script>

<link rel="stylesheet" href="~/css/Home/dashboard.css" asp-append-version="true" />